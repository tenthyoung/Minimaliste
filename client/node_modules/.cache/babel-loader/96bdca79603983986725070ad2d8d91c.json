{"ast":null,"code":"import _regeneratorRuntime from \"/Users/TenthYoung/00-Development/00-Projects/20-project-3/project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/TenthYoung/00-Development/00-Projects/20-project-3/project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/TenthYoung/00-Development/00-Projects/20-project-3/project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/TenthYoung/00-Development/00-Projects/20-project-3/project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/TenthYoung/00-Development/00-Projects/20-project-3/project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/TenthYoung/00-Development/00-Projects/20-project-3/project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/TenthYoung/00-Development/00-Projects/20-project-3/project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/TenthYoung/00-Development/00-Projects/20-project-3/project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/TenthYoung/00-Development/00-Projects/20-project-3/project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/TenthYoung/00-Development/00-Projects/20-project-3/project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/TenthYoung/00-Development/00-Projects/20-project-3/project-3/client/src/pages/Login/Login.js\";\nimport React, { Component } from 'react';\nimport './Login.css';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.toggleLogin = function () {\n      if (_this.state.isLoginFormShowing === true) {\n        _this.setState({\n          isLoginFormShowing: false\n        });\n      } else {\n        _this.setState({\n          isLoginFormShowing: true\n        });\n      }\n    };\n\n    _this.handleChange = function (evt) {\n      _this.setState(_defineProperty({}, evt.target.name, evt.target.value));\n    };\n\n    _this.state = {\n      isLoginFormShowing: false,\n      name: \"\",\n      email: \"\",\n      password: \"\" // This is just another way of binding the context of 'this'\n\n    };\n    _this.submitLogin = _this.submitLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitSignUp = _this.submitSignUp.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"submitSignUp\",\n    value: function () {\n      var _submitSignUp = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(evt) {\n        var signupInfo, response, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                evt.preventDefault();\n                signupInfo = _objectSpread({}, this.state);\n                delete signupInfo.isLoginFormShowing;\n                _context.next = 5;\n                return fetch('/api/users', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(this.state)\n                });\n\n              case 5:\n                response = _context.sent;\n                // we need to see if the server failed:\n                json = response.json();\n                console.log(json); // we need to clear out the form fields after the user submitted\n\n                this.setState({\n                  name: \"\",\n                  email: \"\",\n                  password: \"\"\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function submitSignUp(_x) {\n        return _submitSignUp.apply(this, arguments);\n      }\n\n      return submitSignUp;\n    }()\n  }, {\n    key: \"submitLogin\",\n    value: function () {\n      var _submitLogin = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(evt) {\n        var response, json;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                evt.preventDefault();\n                _context2.next = 3;\n                return fetch('/api/users', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(this.state)\n                });\n\n              case 3:\n                response = _context2.sent;\n                // we need to see if the server failed:\n                json = response.json();\n                console.log(json);\n                this.setState({\n                  email: \"\",\n                  password: \"\"\n                });\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function submitLogin(_x2) {\n        return _submitLogin.apply(this, arguments);\n      }\n\n      return submitLogin;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Login container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-structor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"signup \".concat(this.state.isLoginFormShowing === true ? \"slide-up\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"form-title\",\n        id: \"signup\",\n        onClick: this.toggleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"or\"), \"Sign up\"), React.createElement(\"form\", {\n        onSubmit: this.submitSignUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-holder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"name\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        placeholder: \"Name\",\n        type: \"text\",\n        className: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"email\",\n        name: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        placeholder: \"Email\",\n        type: \"text\",\n        className: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        placeholder: \"Password\",\n        type: \"text\",\n        className: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"submit-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Sign up\"))), React.createElement(\"div\", {\n        className: \"login \".concat(this.state.isLoginFormShowing === false ? \"slide-up\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"form-title\",\n        id: \"login\",\n        onClick: this.toggleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"or\"), \"Log in\"), React.createElement(\"form\", {\n        onSubmit: this.submitLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-holder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"email\",\n        name: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        placeholder: \"Email\",\n        type: \"text\",\n        className: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        placeholder: \"Password\",\n        type: \"text\",\n        className: \"input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"submit-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Log in\"))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["/Users/TenthYoung/00-Development/00-Projects/20-project-3/project-3/client/src/pages/Login/Login.js"],"names":["React","Component","Login","props","toggleLogin","state","isLoginFormShowing","setState","handleChange","evt","target","name","value","email","password","submitLogin","bind","submitSignUp","preventDefault","signupInfo","fetch","method","headers","body","JSON","stringify","response","json","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Login.css'\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            isLoginFormShowing: false,\n            name: \"\",\n            email: \"\",\n            password: \"\"\n        }\n\n        // This is just another way of binding the context of 'this'\n        this.submitLogin = this.submitLogin.bind(this);\n        this.submitSignUp = this.submitSignUp.bind(this);\n    }\n    \n    toggleLogin = () => {\n        if (this.state.isLoginFormShowing === true) {\n            this.setState({isLoginFormShowing: false});\n        } else {\n            this.setState({isLoginFormShowing: true});\n        }\n    }\n\n    async submitSignUp(evt) {\n        evt.preventDefault();\n        let signupInfo = {...this.state}\n        delete signupInfo.isLoginFormShowing;\n        \n        \n        let response = await fetch('/api/users', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state),\n        })\n\n        // we need to see if the server failed:\n        let json = response.json();\n        console.log(json)\n\n        // we need to clear out the form fields after the user submitted\n        this.setState({ name: \"\", email: \"\", password: \"\" });\n    }\n\n    async submitLogin(evt) {\n        evt.preventDefault();\n\n        let response = await fetch('/api/users', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state),\n        })\n\n        // we need to see if the server failed:\n        let json = response.json();\n        console.log(json)\n\n        \n        this.setState({ email: \"\", password: \"\" });\n    }\n    \n    handleChange = evt => {\n        this.setState({\n            [evt.target.name]: evt.target.value\n        });\n    }\n\n\n    render() {\n        return (\n            <div className=\"Login container\">\n                <div className=\"form-structor\">\n                    <div className={`signup ${this.state.isLoginFormShowing === true ? \"slide-up\" : \"\"}`}>\n                        <h2 className=\"form-title\" id=\"signup\" onClick={this.toggleLogin}><span>or</span>Sign up</h2>\n                        <form onSubmit={this.submitSignUp}>\n                            <div className=\"form-holder\">\n                                <input\n                                    id='name'\n                                    name='name'\n                                    value={this.state.name}\n                                    onChange={this.handleChange}\n                                    placeholder=\"Name\"\n                                    type=\"text\"\n                                    className=\"input\"\n                                />\n                                <input\n                                    id='email'\n                                    name='email'\n                                    value={this.state.email}\n                                    onChange={this.handleChange}\n                                    placeholder=\"Email\"\n                                    type=\"text\"\n                                    className=\"input\"\n                                />\n                                <input\n                                    id='password'\n                                    name='password'\n                                    value={this.state.password}\n                                    onChange={this.handleChange}\n                                    placeholder=\"Password\"\n                                    type=\"text\"\n                                    className=\"input\"\n                                />\n                            </div>\n                            <button className=\"submit-btn\">Sign up</button>\n                        </form>\n                    </div>\n                    <div className={`login ${this.state.isLoginFormShowing === false ? \"slide-up\" : \"\"}`} >\n                        <div className=\"center\">\n                            <h2 className=\"form-title\" id=\"login\" onClick={this.toggleLogin}><span>or</span>Log in</h2>\n                            <form onSubmit={this.submitLogin}>\n                                <div className=\"form-holder\">\n                                    <input\n                                            id='email'\n                                            name='email'\n                                            value={this.state.email}\n                                            onChange={this.handleChange}\n                                            placeholder=\"Email\"\n                                            type=\"text\"\n                                            className=\"input\"\n                                        />\n                                        <input\n                                            id='password'\n                                            name='password'\n                                            value={this.state.password}\n                                            onChange={this.handleChange}\n                                            placeholder=\"Password\"\n                                            type=\"text\"\n                                            className=\"input\"\n                                        />\n                                </div>\n                                <button className=\"submit-btn\">Log in</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default Login;\n\n"]},"metadata":{},"sourceType":"module"}